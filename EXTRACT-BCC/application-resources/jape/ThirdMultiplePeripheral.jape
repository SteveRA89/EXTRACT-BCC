Phase: MultiplePeripheral
Input: Distance_to Dimension MicroMeasurements ClockFace NewLine Sepatator
Options: control=appelt

Rule: ThirdMultiplePeripheral
Priority:100
(
    ({MicroMeasurements.MeasurementType == DeepClearance})
    ({Sepatator})?
    ({NewLine})?
    ({NewLine})?
    ({MicroMeasurements.MeasurementType == PeripheralClearance})
    ({Sepatator})?
    ({NewLine})?
    ({MicroMeasurements.MeasurementType == PeripheralClearance})
    ({Sepatator})?
    ({NewLine})?
    (({Distance_to})
    ({ClockFace})
    ({Dimension})):match

):match1
-->
:match.MicroMeasurements = { rule = ThirdMultiplePeripheral, MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}

Rule: ThirdMultiplePeripheral2
Priority:100
(
    (({Distance_to})
    ({ClockFace})
    ({Dimension})):match
    ({Sepatator})?
    ({NewLine})?
    ({MicroMeasurements.MeasurementType == PeripheralClearance})
    ({Sepatator})?
    ({NewLine})?
    ({MicroMeasurements.MeasurementType == PeripheralClearance})
    ({Sepatator})?
    ({NewLine})?
    ({Sepatator})?
    ({NewLine})?
    ({MicroMeasurements.MeasurementType == DeepClearance})

):match1
-->
:match.MicroMeasurements = { rule = ThirdMultiplePeripheral2, MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}