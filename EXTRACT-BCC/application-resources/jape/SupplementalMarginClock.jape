Imports: {import static gate.Utils.*; }

Phase: SupplementalDeepMarginClockFace
Input: SpaceToken Clock ClockFace ExcisionType Numeric Token
Options: control=appelt

Rule: SupplementalDeepMarginClockRange
(
    ({ExcisionType.ExcisionType == "SupplementalDeepMarginSpecimen"}):ET
    ({SpaceToken})?
    ({ClockFace})

):match
-->
:match.SupplementalDeepMarginClockRange = { rule = SupplementalDeepMarginClockRange, 
ExcisionType = :match.ExcisionType.ExcisionType,
time = :match.ClockFace.time},

:ET { 
  inputAS.removeAll(ETAnnots);//This deletes the match1 annotation. So would remove the annotation for excision
}

Rule: SupplementalDeepMarginClockange2
(
    ({ExcisionType.ExcisionType == "SupplementalDeepMarginSpecimen"}):ET
    ({SpaceToken})?
    ({Numeric.value < 13, Numeric.value > 0}):T1
    ({SpaceToken})?
    ({Token.string == "to"}|{Token.string == "-"})
    ({SpaceToken})?
	({Numeric.value < 13, Numeric.value > 0}):T2
    ({SpaceToken})?
    ({ClockFace})

):match
-->
:match.SupplementalDeepMarginClockRange2 = { rule = SupplementalDeepMarginClockRange2, 
ExcisionType = :match.ExcisionType.ExcisionType,
time = :T1.Numeric.value,
time2 = :T2.Numeric.value},

:ET { 
  inputAS.removeAll(ETAnnots);//This deletes the match1 annotation. So would remove the annotation for excision
}

Rule: SupplementalPeripheralMarginClockRange
(
    ({ExcisionType.ExcisionType == "SupplementalPeripheralMarginSpecimen"}):ET
    ({SpaceToken})?
    ({ClockFace})

):match
-->
:match.SupplementalPeripheralMarginClockRange = { rule = SupplementalPeripheralMarginClockRange, 
ExcisionType = :match.ExcisionType.ExcisionType,
time = :match.ClockFace.time},

:ET { 
  inputAS.removeAll(ETAnnots);//This deletes the match1 annotation. So would remove the annotation for excision
}

Rule: SupplementalPeripheralMarginClockRange2
(
    ({ExcisionType.ExcisionType == "SupplementalPeripheralMarginSpecimen"}):ET
    ({SpaceToken})?
    ({Numeric.value < 13, Numeric.value > 0}):T1
    ({SpaceToken})?
    ({Token.string == "to"}|{Token.string == "-"})
    ({SpaceToken})?
	  ({Numeric.value < 13, Numeric.value > 0}):T2
    ({SpaceToken})?
    ({ClockFace})

):match
-->
:match.SupplementalPeripheralMarginClockRange2 = { rule = SupplementalPeripheralMarginClockRange2, 
ExcisionType = :match.ExcisionType.ExcisionType,
time = :T1.Numeric.value,
time2 = :T2.Numeric.value},

:ET { 
  inputAS.removeAll(ETAnnots);//This deletes the match1 annotation. So would remove the annotation for excision
}