Imports: {import static gate.Utils.*; }

Phase: CleanUpClearance
Input: Clearance Clearance2
Options: control=all

Rule: CleanUpClearance

(

    ({Clearance2 contains Clearance})

):match

-->
:match.Clearance = { rule = CleanUpClearance, 
MeasurementType = :match.Clearance2.MeasurementType, 
MeasurementValue = :match.Clearance2.MeasurementValue, 
MeasurementUnit = :match.Clearance2.MeasurementUnit,
ClockPosition = :match.Clearance2.time,
ClockPosition2 = :match.Clearance2.time2,
ClockPosition3 = :match.Clearance2.time3,
ClockPosition4 = :match.Clearance2.time4}, 

:match { 
  inputAS.removeAll(matchAnnots);//This deletes the match1 annotation 
},
:match{
  Annotation matchAnn = matchAnnots.iterator().next();//Get Annotations
  FeatureMap preTagFM = Factory.newFeatureMap();//create new featuremap
  preTagFM.putAll(matchAnn.getFeatures());//copy all of the features from annotation
  Long tokenStart = matchAnnots.firstNode().getOffset();//get start of annotation
  Long tokenEnd = matchAnnots.lastNode().getOffset();// get end of annotation
  preTagFM.put("ruleDelete", "CleanUpClearance");//add rule name
  AnnotationSet defaultSet = doc.getAnnotations("Bio");// select annotation set
  gate.Utils.addAnn(defaultSet, tokenStart, tokenEnd, "Clearance2Deleted", preTagFM);//create annotation
}
