Phase: SecondMultiplePeripheral
Input: Distance_to Dimension DeepClearance PeripheralClearance ClockFace NewLine Separator MarginWordDistances
Options: control=appelt

//Deep margin 3mm
//Distance to 12 o'clock   > 2mm.
//3 o'clock     3mm.

//OR

//Deep margin = 4mm
//Distance to 12 o'clock = 10mm
//Distance to 3 o'clock = >2mm
//Distance to 6 o'clock = 8mm

Rule: SecondMultiplePeripheral
Priority:99
(
    ({DeepClearance.MeasurementType == DeepClearance})
    ({Separator})?
    ({NewLine})?
    ({Separator})?
    ({NewLine})?
    ({Distance_to})?
    ({ClockFace})
    ({Separator})?
    ({Dimension}|{MarginWordDistances})
    ({Separator})?
    ({NewLine})?
    ({Distance_to})?
    (({ClockFace})
    ({Separator})?
    ({Dimension}|{MarginWordDistances})):match

):match1
-->
:match.PeripheralClearance = { rule = SecondMultiplePeripheral, MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.MarginWordDistances.Value,
MeasurementUnit = "mm",
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}

Rule: SecondMultiplePeripheral2
Priority:99
(
    ({Distance_to})?
    ({ClockFace})
    ({Dimension}|{MarginWordDistances})
    ({Separator})?
    ({NewLine})?
    ({Distance_to})?
    (({ClockFace})
    ({Separator})?
    ({Dimension}|{MarginWordDistances})):match
    ({Separator})?
    ({NewLine})?
    ({Separator})?
    ({NewLine})?
    ({DeepClearance.MeasurementType == DeepClearance})

):match1
-->
:match.PeripheralClearance = { rule = SecondMultiplePeripheral2, MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.MarginWordDistances.Value,
MeasurementUnit = "mm",
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}

Rule: SecondMultiplePeripheral3
Priority:99
(
    ({PeripheralClearance})
    ({Separator})?
    (({ClockFace})
    ({Separator})?
    ({Dimension}|{MarginWordDistances})):match

):match1
-->
:match.PeripheralClearance = { rule = SecondMultiplePeripheral3, MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.MarginWordDistances.Value,
MeasurementUnit = "mm",
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}

Rule: SecondMultiplePeripheral4
Priority:99
(
    ({PeripheralClearance})
    ({Separator})?
    (({Dimension}|{MarginWordDistances})
    ({ClockFace})):match
    ({Separator})?

):match1
-->
:match.PeripheralClearance = { rule = SecondMultiplePeripheral4 MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.MarginWordDistances.Value,
MeasurementUnit = "mm",
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}

Rule: SecondMultiplePeripheral5
Priority:100
(
    ({PeripheralClearance})
    ({Separator})?
    ({DeepClearance})
    (({MarginWordDistances})
    ({ClockFace})):match
    ({Separator})?

):match1
-->
:match.PeripheralClearance = { rule = SecondMultiplePeripheral5, MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.MarginWordDistances.Value,
MeasurementUnit = "mm",
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}