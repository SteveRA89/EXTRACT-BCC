Phase: SecondMultiplePeripheral
Input: Distance_to Dimension DeepClearance PeripheralClearance ClockFace NewLine Separator
Options: control=appelt

//Deep margin 3mm
//Distance to 12 o'clock   > 2mm.
//3 o'clock     3mm.

Rule: SecondMultiplePeripheral
Priority:100
(
    ({DeepClearance.MeasurementType == DeepClearance})
    ({Separator})?
    ({NewLine})?
    ({Separator})?
    ({NewLine})?
    ({Distance_to})
    ({ClockFace})
    ({Dimension}) 
    ({Separator})?
    ({NewLine})?
    (({ClockFace})
    ({Dimension})):match

):match1
-->
:match.PeripheralClearance = { rule = SecondMultiplePeripheral, MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}

Rule: SecondMultiplePeripheral2
Priority:100
(
    ({Distance_to})
    ({ClockFace})
    ({Dimension})
    ({Separator})?
    ({NewLine})?
    (({ClockFace})
    ({Dimension})):match
    ({Separator})?
    ({NewLine})?
    ({Separator})?
    ({NewLine})?
    ({DeepClearance.MeasurementType == DeepClearance})

):match1
-->
:match.PeripheralClearance = { rule = SecondMultiplePeripheral2, MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}

Rule: SecondMultiplePeripheral3
Priority:100
(
    ({PeripheralClearance})
    ({Separator})?
    (({ClockFace})
    ({Dimension})):match

):match1
-->
:match.PeripheralClearance = { rule = SecondMultiplePeripheral3, MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}

Rule: SecondMultiplePeripheral4
Priority:100
(
    ({PeripheralClearance})
    ({Separator})?
    (({Dimension})
    ({ClockFace})):match

):match1
-->
:match.PeripheralClearance = { rule = SecondMultiplePeripheral4 MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units,
PeripheralClockPosition = :match.ClockFace.time}