Phase: DimensionSpecimen
Input: Dimension Token Specimen ExcisionType DetailedDimension Lesion Dimensions
Options: control=appelt

//This will only pick up ExcisionTypes directly from the gazetteer, the jape rule is currently after it in the pipeline

Rule: DimensionSpecimen1
Priority:100
(
    ({Specimen})
    ({ExcisionType})?
    ({Lesion})?
    (({Dimension})
    ):match1
    
):match

-->
:match1.DimensionSpecimen = { rule = DimensionSpecimen1, 
N1 = :match.Dimension.N1, 
N2 = :match.Dimension.N2, 
N3 = :match.Dimension.N3, 
N4 = :match.Dimension.N4, 
units = :match.Dimension.units, 
NumberOfMeasurements = :match.Dimension.NumberOfMeasurements, 
LongestDistance = :match.Dimension.LongestDistance}

//With the changes to Dimension.jape (which includes all the token X/by/x/... stuff) why are they needed again? This is to account for DetailedDimension's
//Examples would be useful

Rule: DimensionSpecimenWords4Da
Priority:100
(
    ({Specimen})
    ({ExcisionType})?
    ({Lesion})?
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})?
    (({DetailedDimension}):n1
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({DetailedDimension}):n2
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({DetailedDimension}):n3
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({Dimensions})?
    ({DetailedDimension}):n4
    ):match1
):match

-->
:match1.DimensionSpecimen = { rule = DimensionSpecimenWords4Da, 
N1 = :n1.DetailedDimension.N1, 
N2 = :n2.DetailedDimension.N1, 
N3 = :n3.DetailedDimension.N1, 
N4 = :n4.DetailedDimension.N1, 
units = :n4.DetailedDimension.units, 
NumberOfMeasurements = :match.Dimension.NumberOfMeasurements,
LongestDistance = :match.Dimension.LongestDistance}

Rule: DimensionSpecimenWords4Db
Priority:100
(
    ({Specimen})?
    ({ExcisionType})
    ({Lesion})?
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})?
    (({DetailedDimension}):n1
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({DetailedDimension}):n2
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({DetailedDimension}):n3
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({Dimensions})?
    ({DetailedDimension}):n4
    ):match1

):match

-->
:match1.DimensionSpecimen = { rule = DimensionSpecimenWords4Db, 
N1 = :n1.DetailedDimension.N1, 
N2 = :n2.DetailedDimension.N1, 
N3 = :n3.DetailedDimension.N1, 
N4 = :n4.DetailedDimension.N1, 
units = :n4.DetailedDimension.units, 
NumberOfMeasurements = :match.Dimension.NumberOfMeasurements,
LongestDistance = :match.Dimension.LongestDistance}

Rule: DimensionSpecimenWords3Da
Priority:100
(
    ({Specimen})
    ({ExcisionType})?
    ({Lesion})?
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})?
    (({DetailedDimension}):n1
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({DetailedDimension}):n2
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({Dimensions})?
    ({DetailedDimension}):n3
    ):match1

):match

-->
:match1.DimensionSpecimen = { rule = DimensionSpecimenWords3Da, 
N1 = :n1.DetailedDimension.N1, 
N2 = :n2.DetailedDimension.N1, 
N3 = :n3.DetailedDimension.N1, 
units = :n3.DetailedDimension.units, 
NumberOfMeasurements = :match.Dimension.NumberOfMeasurements,
LongestDistance = :match.Dimension.LongestDistance}

Rule: DimensionSpecimenWords3Db
Priority:100
(
    ({Specimen})?
    ({ExcisionType})
    ({Lesion})?
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})?
    (({DetailedDimension}):n1
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({DetailedDimension}):n2
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({Dimensions})?
    ({DetailedDimension}):n3
    ):match1

):match

-->
:match1.DimensionSpecimen = { rule = DimensionSpecimenWords3Db, 
N1 = :n1.DetailedDimension.N1, 
N2 = :n2.DetailedDimension.N1, 
N3 = :n3.DetailedDimension.N1, 
units = :n3.DetailedDimension.units, 
NumberOfMeasurements = :match.Dimension.NumberOfMeasurements,
LongestDistance = :match.Dimension.LongestDistance}

Rule: DimensionSpecimenWords2Da
Priority:100
(
    ({Specimen})
    ({ExcisionType})?
    ({Lesion})?
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})?
    (({DetailedDimension}):n1
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({Dimensions})?
    ({DetailedDimension}):n2
    ):match1

):match

-->
:match1.DimensionSpecimen = { rule = DimensionSpecimenWords2Da, 
N1 = :n1.DetailedDimension.N1, 
N2 = :n2.DetailedDimension.N1, 
units = :n2.DetailedDimension.units, 
NumberOfMeasurements = :match.Dimension.NumberOfMeasurements,
LongestDistance = :match.Dimension.LongestDistance}

Rule: DimensionSpecimenWords2Db
Priority:100
(
    ({ExcisionType})
    ({Specimen})?
    ({Lesion})?
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})?
    (({DetailedDimension}):n1
    ({Token.string == "x"} | {Token.string == "by"} | {Token.string == "X"} | {Token.kind == punctuation, Token.string == ";"}|{Token.kind == punctuation, Token.string == ","})
    ({Dimensions})?
    ({DetailedDimension}):n2
    ):match1

):match

-->
:match1.DimensionSpecimen = { rule = DimensionSpecimenWords2Db, 
N1 = :n1.DetailedDimension.N1, 
N2 = :n2.DetailedDimension.N1, 
units = :n2.DetailedDimension.units, 
NumberOfMeasurements = :match.Dimension.NumberOfMeasurements,
LongestDistance = :match.Dimension.LongestDistance}