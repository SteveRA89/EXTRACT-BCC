Phase: ConjoinedMargins
Input: Dimension Micro_deep_margin Micro_peripheral_margin Micro_peripheral_margin_maybe Sentence MarginWordDistances ClockFace NewLine Separator Micro_thickness TumourThickness DeepClearance PeripheralClearance Dimensions
Options: control=appelt

//10mm deep and 15mm peripheral clearance

Rule: ConjoinedMarginsDeep
Priority:100
(
    (({Dimension}) //10mm
    ({Micro_thickness})//Deep, thick 
    ({Separator})?
    ({ClockFace})?):match1
    ({PeripheralClearance.MeasurementType == "PeripheralClearance"})//15mm lateral clearance (12 o'clock?)

):match
-->
:match1.DeepClearance = { rule = ConjoinedMarginsDeep, 
MeasurementType = "DeepClearance", 
MeasurementValue = :match1.Dimension.N1, 
MeasurementUnit = :match1.Dimension.units,
DeepClockPosition = :match1.PeripheralClearance.PeripheralClockPosition,
DeepClockPosition = :match1.ClockFace.time}

//10mm peripheral and 15mm deep clearance

Rule: ConjoinedMarginsPeripheral
Priority:100
(
    (({Dimension})
    ({Micro_peripheral_margin_maybe}) //Lateral 
    ({Separator})?
    ({ClockFace})?):match1
    ({DeepClearance.MeasurementType == "DeepClearance"}) //Deep Margin

):match
-->
:match1.PeripheralClearance = { rule = ConjoinedMarginsPeripheral, 
MeasurementType = "PeripheralClearance", 
MeasurementValue = :match1.Dimension.N1, 
MeasurementUnit = :match1.Dimension.units,
PeripheralClockPosition = :match1.DeepClearance.DeepClockPosition,
PeripheralClockPosition = :match1.ClockFace.time}

//Thickness and conjoined in this rule so that thickness is not picked up as deep margin - priority set so deep clearance longest match to differentiate

//10mm deep (or thick) ONLY!

Rule: Micro_thickness1
Priority:99
(
    (({Micro_thickness.Position != Post}) //Deep
    ({Dimension})):match //10mm 

):match1
-->
:match.TumourThickness = { rule = Micro_thickness1, MeasurementType = "TumourThickness", 
MeasurementValue = :match.TumourThickness.MeasurementValue, 
MeasurementUnit = :match.TumourThickness.MeasurementUnit}

Rule: Micro_thickness2
Priority:99
(

    (({Dimension}) //10mm
    ({Micro_thickness})):match // Deep 

):match1
-->
:match.TumourThickness = { rule = Micro_thickness2, MeasurementType = "TumourThickness", 
MeasurementValue = :match.TumourThickness.MeasurementValue, 
MeasurementUnit = :match.TumourThickness.MeasurementUnit}