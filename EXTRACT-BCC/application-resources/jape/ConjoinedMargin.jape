Phase: ConjoinedMargins
Input: Dimension Micro_deep_margin Micro_peripheral_margin Micro_peripheral_margin_maybe Sentence MarginWordDistances ClockFace Separator Micro_thickness TumourThickness Clearance Dimensions NewLine ClinicalDetailMargin
Options: control=appelt

//10mm deep and 15mm peripheral clearance

Rule: ConjoinedMarginsDeep1
Priority:100
(
    (({Dimension}) //10mm
    ({Micro_deep_margin})//Deep, thick 
    ({Separator})?
    ({NewLine})?
    ({Separator})?
    ({ClockFace})?):match1
    ({Clearance.MeasurementType == "PeripheralClearance"})//15mm lateral clearance (12 o'clock?)

):match
-->
:match1.Clearance = { rule = ConjoinedMarginsDeep1, 
MeasurementType = "DeepClearance", 
MeasurementValue = :match1.Dimension.N1, 
MeasurementUnit = :match1.Dimension.units,
DeepClockPosition = :match1.Clearance.PeripheralClockPosition,
DeepClockPosition = :match1.ClockFace.time}

// The tumour is 3mm from both the peripheral margin and closest deep margin 9 o'clock (this rule will capture "closest deep margin" onwards)

Rule: ConjoinedMarginsDeep2
Priority:99
(
    ({Dimension})
    ({Micro_peripheral_margin})
    ({Separator})?
    ({NewLine})?
    ({Separator})?
    (({Micro_deep_margin})):match1
    ({ClockFace})?

):match
-->

:match1.Clearance = { rule = ConjoinedMarginsDeep2, 
MeasurementType = "DeepClearance", 
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units
DeepClockPosition = :match.ClockFace.time,
DeepClockPosition2 = :match.ClockFace.time2,
DeepClockPosition3 = :match.ClockFace.time3,
DeepClockPosition4 = :match.ClockFace.time4}

//10mm peripheral and 15mm deep clearance

Rule: ConjoinedMarginsPeripheral1
Priority:100
(
    (({Dimension})
    ({Micro_peripheral_margin_maybe}) //Lateral 
    ({Separator})?
    ({NewLine})?
    ({Separator})?
    ({ClockFace})?):match1
    ({Clearance.MeasurementType == "DeepClearance"}) //Deep Margin

):match
-->
:match1.Clearance = { rule = ConjoinedMarginsPeripheral1, 
MeasurementType = "PeripheralClearance", 
MeasurementValue = :match1.Dimension.N1, 
MeasurementUnit = :match1.Dimension.units,
PeripheralClockPosition = :match1.Clearance.DeepClockPosition,
PeripheralClockPosition = :match1.ClockFace.time}

// The tumour is 3mm from both the deep margin and closest epidermal margin 9 o'clock (this rule will capture "closest epidermal margin" onwards)

Rule: ConjoinedMarginsPeripheral2
Priority:99
(
    ({Dimension})
    ({Micro_deep_margin})
    ({Separator})?
    ({NewLine})?
    ({Separator})?
    (({Micro_peripheral_margin})):match1
    ({ClockFace})?

):match
-->

:match1.Clearance = { rule = ConjoinedMarginsPeripheral2, 
MeasurementType = "PeripheralClearance", 
MeasurementValue = :match.Dimension.N1, 
MeasurementUnit = :match.Dimension.units
PeipheralClockPosition = :match.ClockFace.time,
PeipheralClockPosition2 = :match.ClockFace.time2,
PeipheralClockPosition3 = :match.ClockFace.time3,
PeipheralClockPosition4 = :match.ClockFace.time4}

//Thickness and conjoined in this rule so that thickness is not picked up as deep margin - priority set so deep clearance longest match to differentiate

//10mm deep (or thick) ONLY!

Rule: Micro_thickness1
Priority:99
(
    (({Micro_thickness.Position != Post}) //Deep
    ({Dimension})):match //10mm 

):match1
-->
:match.TumourThickness = { rule = Micro_thickness1, MeasurementType = "TumourThickness", 
MeasurementValue = :match1.Dimension.N1, 
MeasurementUnit = :match1.Dimension.units}

Rule: Micro_thickness2
Priority:99
(

    (({Dimension}) //10mm
    ({Micro_thickness})):match // Deep 

):match1
-->
:match.TumourThickness = { rule = Micro_thickness2, MeasurementType = "TumourThickness", 
MeasurementValue = :match1.Dimension.N1, 
MeasurementUnit = :match1.Dimension.units}