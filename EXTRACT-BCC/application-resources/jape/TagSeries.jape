Phase: TagSeries
Input: Token NewLine
Options: control=all

//Need to first get StringTokenizer to work

Rule: TagSeriesA
Priority: 100
(
    ({Token.string == "A"}):match1
    ({Token.string == "-"})
    ({Token.string == "B"})
    ({Token.string == ")"})

):match
-->
:match1.TagSeries = { rule = TagSeriesA, value = :match1@string, Tag = :match1@string}

Rule: TagSeriesB
Priority: 100
(
    ({Token.string == "A"})
    ({Token.string == "-"}):match1
    ({Token.string == "B"})
    ({Token.string == ")"})

):match
-->
:match1.TagSeries = { rule = TagSeriesB, Tag = "B"}

Rule: TagSeriesC
Priority: 100
(
    ({Token.string == "A"})
    ({Token.string == "-"})
    ({Token.string == "B"}):match1
    ({Token.string == ")"})

):match
-->
:match1.TagSeries = { rule = TagSeriesC, Tag = "C"}

Rule: TagSeriesD
Priority: 100
(
    ({Token.string == "A"})
    ({Token.string == "-"})
    ({Token.string == "B"})
    ({Token.string == ")"}):match1

):match
-->
:match1.TagSeries = { rule = TagSeriesD, Tag = "D"}