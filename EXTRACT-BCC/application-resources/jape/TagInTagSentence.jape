Imports: { import static gate.Utils.*;
            import java.util.*; }
Phase: TagInTagSentence
Input: Tag TagSentence
Options: control=all
Rule: TagInTagSentence
(
    ({TagSentence contains Tag.SubTag == "Yes"}):tag
):match
-->
:match {
    Annotation matchAnn = matchAnnots.iterator().next();
    AnnotationSet contAnnots = getContainedAnnotations(inputAS, matchAnnots, "Tag");
    List<Annotation> contList = gate.Utils.inDocumentOrder(contAnnots);
    int length = contList.size();
    Annotation firstNo1 = contList.get(1);
    Long firstNo1Start = firstNo1.getStartNode().getOffset();
    for (int i = 1; i < length -1; i++) {
        Annotation ithAnnotation = contList.get(i);
        FeatureMap fmTag = ithAnnotation.getFeatures();
        FeatureMap newAnnFeatures = Factory.newFeatureMap();
        newAnnFeatures.putAll(fmTag);
        newAnnFeatures.put("Test", "Test123");
        Long tokenStart = ithAnnotation.getStartNode().getOffset();
        Annotation nextNumber = contList.get(i + 1);
        Long tokenEnd = nextNumber.getStartNode().getOffset();
        AnnotationSet defaultSet = doc.getAnnotations("Bio");
        gate.Utils.addAnn(defaultSet, tokenStart, tokenEnd -1, "TagSentence", newAnnFeatures);
    }
    // length - 1 = last item in list?
    Annotation lastNo1 = contList.get(length - 1);
    FeatureMap lastNodeFM = lastNo1.getFeatures(); 
    FeatureMap newAnnFeatures3 = Factory.newFeatureMap();
    newAnnFeatures3.putAll(lastNodeFM);
    newAnnFeatures3.put("Test", "Test1234567");
    Long tokenStart3 = lastNo1.getStartNode().getOffset();
    Long tokenEnd3 = matchAnn.getEndNode().getOffset();
    AnnotationSet defaultSet = doc.getAnnotations("Bio");
    gate.Utils.addAnn(defaultSet, tokenStart3, tokenEnd3, "TagSentence", newAnnFeatures3);
    
    //TODO - CHANGE TAGSENTENCE THATS LOADED IN TO END AT START OF FIRST NEW TAG SENTENCE
    Long tokenStart2 = matchAnn.getStartNode().getOffset();
    Long tokenEnd2 = firstNo1Start - 1;
    AnnotationSet defaultSet2 = doc.getAnnotations("Bio");
    FeatureMap matchAnnFM = matchAnn.getFeatures();
    FeatureMap newAnnFeatures2 = Factory.newFeatureMap();
    newAnnFeatures2.putAll(matchAnnFM);
    newAnnFeatures2.put("rule", "ShortenedTagSentence");
    gate.Utils.addAnn(defaultSet2, tokenStart2, tokenEnd2, "TagSentence", newAnnFeatures2);
},
:match { 
  inputAS.removeAll(matchAnnots);//This deletes the match annotation (The original TagSentence)
},
:match{
  Annotation matchAnn = matchAnnots.iterator().next();//Get Annotations
  FeatureMap preTagFM = Factory.newFeatureMap();//create new featuremap
  preTagFM.putAll(matchAnn.getFeatures());//copy all of the features from annotation
  Long tokenStart = matchAnnots.firstNode().getOffset();//get start of annotation
  Long tokenEnd = matchAnnots.lastNode().getOffset();// get end of annotation
  preTagFM.put("ruleDelete", "TagInTagSentence");//add rule name
  AnnotationSet defaultSet = doc.getAnnotations("Bio");// select annotation set
  gate.Utils.addAnn(defaultSet, tokenStart, tokenEnd, "TagSentenceDeleted", preTagFM);//create annotation
}
